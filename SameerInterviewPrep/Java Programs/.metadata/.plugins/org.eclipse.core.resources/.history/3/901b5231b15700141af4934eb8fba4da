import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;


public class Solution {
 public static ArrayList<Integer> returnRange(int input)
 {
  ArrayList<Integer> rangeArray = new ArrayList<Integer>();	 
  for(int i=4;i>=0;i--)
  {
	  if(input-i>=0)
	  {
		  rangeArray.add(input-i);
	  }
  }
  return rangeArray;
 }
 
 public static void main(String args[])
 {
	 String test = "4 1 3 6 10";
	 String[] splitted = test.split("\\s+");
	 LinkedHashMap<Integer,Integer> countMap = new LinkedHashMap<Integer,Integer>();
	 for(int i=0;i<splitted.length;i++)
	 {
		 int a = Integer.parseInt(splitted[i]);
		 ArrayList<Integer> range = returnRange(a);
		 for(int iter : range)
		 {
			 if(countMap.containsKey(iter))
			 {
				 countMap.put(iter, countMap.get(iter)+1);
			 }
			 else
			 {
				 countMap.put(iter,1);
			 }
		 }
	 }
	 
	 List<Entry<Integer, Integer>> list = new LinkedList<Entry<Integer, Integer>>(countMap.entrySet());
	 Collections.sort(list, new Comparator<Entry<Integer, Integer>>()
		        {
		 	
		            public int compare(Entry<Integer, Integer> o1,
		                    Entry<Integer, Integer> o2)
		            {
		                return o1.getValue()>o2.getValue()?-1:1;
		            }
		        });
	 
	 Iterator it = countMap.entrySet().iterator();
	 int maxValue = ((Map.Entry)(it.next())).getValue();
	 
	 System.out.println();
	 
 }
}
